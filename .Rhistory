library("swirl")
install.packages("swirl")
library("Swirl")
library(swirl)
swirl()
install_from_swirl("Getting_and_Cleaning_Data")
install_from_swirl('Statistical Inference')
swirl()
1-3/36
deck
52
4/52
0
12/52
0
2/12
2/51
0.64
0.64
mypdf
integrate(mypdf,lower=0, upper=1.6)
1.414
2^0.5
0.997*0.001
(1-0.985)*(1-0.001)
0.000997/(0.000997+0.014985)
3.5
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
integrate(myfunc, o, 2)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
install_from_swirl("Regression Models")
exit
exit()
bye
quit
quit()
library("swirl")
swirl()
dice_sqr
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair-(3.5)^2
ex2_fair-3.5^2
sum(dice_sqr*dice_high) - 3.5^2
sum(dice_sqr*dice_high) - edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/SQRT(10)
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3)*0.8^3*0.2*2
choose(5,3)*0.8^3*0.2*(5-3)
choose(5,3)*(.8)^3*(.2)^(5-3)
choose(5,3)*(.8)^3*(.2)^(5-3) + choose(5,4)*(.8)^4*(0.2)^1 + choose(5,5)*(.8)^5*(.2)^0
pbinom(2, 5, .8, lower.tail = FALSE)
qnorm(0.1)
0
qnorm(0.975, 3, 2)
3+1.96*2
pnorm(1200, 1020, 50, lower.tail = FALSE)
pnorm((1200-1020)/50, lower.tail=FALSE)
qnorm(0.75, 1020, 50, lower.tail=FALSE)
qnorm(.75, mean=1020, sd=50, lower.tail=TRUE)
.53
,53
.53
ppois(quantile(3), mean=2.5*4)
ppois(3, 2.5*4)
pbinom(5, 1000, 0.01)
ppois(5,1000*0.01)
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
0.6 + C(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
0.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binomial.test(60, 100)
binom.test(60, 100)
binom.test(60, 100)$conf.int
mywald(.2)
ACCompar(20)
lamb=5/94.32
lamb<-5/94.32
lamb + c(-1.1)*qnorm(.975)*sqrt(lamb)
lamb + c(-1.1)*qnorm(.975)*sqrt(lamb/94.32)
lamb +c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)
poisson.test(5,94.32)$conf
qnorm(70, 80, 10)
help pnorm
help(pnorm)
pnorm(70, mean=80, sd=10)
pnorm(70, mean=80, sd=10, lower.tail = FALSE)
qnorm(0.95, 1100, 75, lower.tail=FALSE)
qnorm(0.95, 1100, 75)
choose(5,4)*(.5)^4*(.5)^1+choose(5,5)*(.5)^5
help(ppois)
ppois(10, 5*3)
1100+1.645*7.5
ppois(14, 15)
ppois(16, 15)
(14-15)/(10/sqrt(100))
pnorm(-1)
(16-15)/(10/sqrt(100))
pnorm(1)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference=g1-g2
difference<-g2-g1
mean(difference)
s=sd(difference)
s<-sd(difference)
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(difference)$conf.int
swirl()
swirl()
install.packages(packrat)
install.packages("packrat")
install.packages("rsconnect")
setwd("~/DataScienceProjects/BPAnalysis")
help("read.csv")
bpdata <- read.csv("BPReadings.csv", header=T);
temp <- read.csv("BPReadings.csv", header=T);
bpdata<-temp[,1:7]
bpData$Date<-as.Date(bpData$Date)
bpdata$Date<-as.Date(bpdata$Date)
bpdata$Date<-as.Date(bpdata$Date,"%m/%d/%Y")
temp <- read.csv("BPReadings.csv", header=T);
bpdata<-temp[,1:7]
bpdata$Date<-as.Date(bpdata$Date,"%m/%d/%Y")
bpdata$Time<-as.POSIXct(bpdata$Time,"%H:%M %p")
bpdata$Time<-as.POSIXct(bpdata$Time,"%I:%M %p")
warnings()
bpdata$Time<-as.POSIXct(bpdata$Time,"%I:%M %p", tz="EDT")
bpdata$Time<-as.POSIXct(bpdata$Time,"%I:%M %p", tz="EST")
Sys.timezone()
bpdata$Time<-as.POSIXct(bpdata$Time,"%I:%M %p", tz="America/New_York")
bpData$Time
bpdata$Time
g1<-ggplot(bpdata, aes(x=Date,y=Systolic, col=Medicine)) + geom_point()
library(ggplot2)
g1<-ggplot(bpdata, aes(x=Date,y=Systolic, col=Medicine)) + geom_point()
g1
ggplot(bpdata, aes(x=Date,y=Diastolic, col=Medicine)) + geom_point()
ggplot(bpdata, aes(x=Date,y=Systolic, col=Medicine)) + geom_point(shape=4)
ggplot(bpdata, aes(x=Date,y=Systolic, col=Medicine)) + geom_point(shape=16)
ggplot(bpdata, aes(x=Date,y=Systolic, col=Medicine)) + geom_boxplot()
ggplot(bpdata, aes(x=Date,y=Diastolic, col=Medicine)) + geom_boxplot()
ggplot(bpdata, aes(x=Date,y=Diastolic, col=Medicine)) + geom_boxplot() + geom_jitter()
ggplot(bpdata, aes(x=Date,y=Diastolic, col=Medicine)) + geom_boxplot()
ggplot(bpdata, aes(x=Date,y=Diastolic, col=Medicine)) + geom_boxplot() + geom_jitter()
ggplot(bpdata, aes(x=Date,y=Systolic, col=Medicine)) + geom_boxplot() + geom_jitter()
temp <- read.csv("BPReadings.csv", header=T);
bpdata<-temp[, 1:7]
bpdata$Date<-as.Date(bpdata$Date,"%m/%d/%Y")
bpdata$Time<-as.POSIXct(bpdata$Time,"%I:%M %p", tz="America/New_York")
temp <- read.csv("BPReadings.csv", header=T);
bpdata<-temp[, 1:7]
bpdata$datetime<-paste(bpdata@Date,bpdata$Time)
bpdata$datetime<-paste(bpdata$Date,bpdata$Time)
bpdata$datetime<-as.POSIXct(bpdata$datetime,"%m/%d/%Y %I:%M %p")
bpdata$datetime<-as.POSIXct(bpdata$datetime,"%m/%d/%Y %I:%M %p", tz="America/New_York")
t<-strftime(bpdata$datetime,format="%H:%M")
t
temp <- read.csv("BPReadings.csv", header=T)
bpdata<-temp[, 1:7]
bpdata$Date<-as.Date(bpdata$Date,"%m/%d/%Y")
bpdata$datetime<-paste(bpdata$Date,bpdata$Time)
bpdata$datetime<-as.POSIXct(bpdata$datetime,"%m/%d/%Y %I:%M %p", tz="America/New_York")
a<-by(data=bpdata, Medicine, summary)
a<-by(data=bpdata, bpdata$Medicine, summary)
a
a<-by(bpdata[,3:5], bpdata$Medicine, summary)
a
a<-by(bpdata[,3:5], bpdata$Medicine, mean)
a<-by(bpdata[,3:5], bpdata$Medicine, mean)
a
a<-by(bpdata[,3:5], bpdata$Medicine, mean(na.rm=T))
t.test(data=bpdata, Systolic~Medicine, paired=FALSE)
aovS<-aov(bpdata$Systolic,bpdata$Medicine)
aovS<-aov(bpdata$Systolic~bpdata$Medicine)
summary(aovS)
TukeyHSD(aovS)
tukS<-TukeyHSD(aovS)
plot(tukS)
aovD<-aov(bpdata$Diastolic~bpdata$Medicine)
summary(aovD)
tukD<-TukeyHSD(aovD)
plot(tukD)
by(bpdata[,3:5], bpdata$Medicine, summary)
a<-by(bpdata[,3:5], bpdata$Medicine, summary)
a
class(a)
a$LS50AML05$mean
a$LS50AML05
aovS
summary(aovS)
summary(aovS)$coef
summary(aovS)$1
class(aovS)
summary(aovS)$aov
aovS$aov
str(aovS)
library(knitr)
kable(aovS)
xtable(aovS)
library(xtable)
xtable(aovS)
